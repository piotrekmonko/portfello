// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package cmd

import (
	"context"
	"github.com/piotrekmonko/portfello/pkg/auth"
	"github.com/piotrekmonko/portfello/pkg/conf"
	"github.com/piotrekmonko/portfello/pkg/dao"
	"github.com/piotrekmonko/portfello/pkg/logz"
	"github.com/piotrekmonko/portfello/pkg/provision"
	"github.com/piotrekmonko/portfello/pkg/server"
	"net/http"
)

// Injectors from providers.go:

func initializeProvisioner(ctx context.Context, c *conf.Config) (*provision.Provisioner, func(), error) {
	log, cleanup, err := logz.NewLogger(c)
	if err != nil {
		return nil, nil, err
	}
	daoDAO, cleanup2, err := dao.NewDAO(ctx, log, c)
	if err != nil {
		cleanup()
		return nil, nil, err
	}
	service, err := auth.NewFromConfig(ctx, log, c, daoDAO)
	if err != nil {
		cleanup2()
		cleanup()
		return nil, nil, err
	}
	provisioner := provision.NewProvisioner(log, daoDAO, service)
	return provisioner, func() {
		cleanup2()
		cleanup()
	}, nil
}

func initializeServer(ctx context.Context, c *conf.Config) (*http.Server, func(), error) {
	log, cleanup, err := logz.NewLogger(c)
	if err != nil {
		return nil, nil, err
	}
	daoDAO, cleanup2, err := dao.NewDAO(ctx, log, c)
	if err != nil {
		cleanup()
		return nil, nil, err
	}
	service, err := auth.NewFromConfig(ctx, log, c, daoDAO)
	if err != nil {
		cleanup2()
		cleanup()
		return nil, nil, err
	}
	serveMux, err := server.NewRouter(c, daoDAO, service)
	if err != nil {
		cleanup2()
		cleanup()
		return nil, nil, err
	}
	httpServer, cleanup3, err := server.NewServer(ctx, log, c, serveMux)
	if err != nil {
		cleanup2()
		cleanup()
		return nil, nil, err
	}
	return httpServer, func() {
		cleanup3()
		cleanup2()
		cleanup()
	}, nil
}

func initializeRouter(ctx context.Context, c *conf.Config) (*http.ServeMux, func(), error) {
	log, cleanup, err := logz.NewLogger(c)
	if err != nil {
		return nil, nil, err
	}
	daoDAO, cleanup2, err := dao.NewDAO(ctx, log, c)
	if err != nil {
		cleanup()
		return nil, nil, err
	}
	service, err := auth.NewFromConfig(ctx, log, c, daoDAO)
	if err != nil {
		cleanup2()
		cleanup()
		return nil, nil, err
	}
	serveMux, err := server.NewRouter(c, daoDAO, service)
	if err != nil {
		cleanup2()
		cleanup()
		return nil, nil, err
	}
	return serveMux, func() {
		cleanup2()
		cleanup()
	}, nil
}

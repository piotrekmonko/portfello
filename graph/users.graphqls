
type User {
    id: ID!
    email: String!
    displayName: String!
    roles: String!
}

extend type Query {
    login(email: String!, pass: String!): String
    getUserRoles(userId: String!): [RoleId!] @hasRole(role: user)
    listUsers: [User!]! @hasRole(role: admin)
    getUser(email: String!): User! @hasRole(role: admin)
}

input NewUser {
    email: String!
    displayName: String!
}

extend type Mutation {
    userSetPassword(userId: String!, newPassword: String!): User! @hasRole(role: super)
    userCreate(newUser: NewUser!): User! @hasRole(role: admin)
    adminCreate(newAdmin: NewUser!): User! @hasRole(role: super)
    userAssignRoles(email: String!, newRoles: [RoleId!]): [RoleId!] @hasRole(role: admin)
}
